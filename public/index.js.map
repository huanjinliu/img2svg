{"version":3,"file":"index.js","sources":["../dist/imageToSvg.esm.js","../../example/index.ts"],"sourcesContent":["const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\n/**\n * 创建一个带矩形色块基本的svg\n * @param attrs 配置属性\n * @returns svg元素\n */\nconst createSvgElement = (attrs) => {\n    const { width, height, viewBox = `0 0 ${width} ${height}` } = attrs;\n    const svg = document.createElementNS(SVG_NAMESPACE, 'svg');\n    svg.setAttribute('viewBox', viewBox);\n    svg.setAttribute('width', `${width}`);\n    svg.setAttribute('height', `${height}`);\n    return svg;\n};\n/**\n * 创建一个填充色块路径区域\n * @param attrs 配置属性\n * @returns 路径区域\n */\nconst createPathElement = (attrs) => {\n    const { path: originPath, clipPaths = [], fill = '#000', opacity = 1 } = attrs;\n    const pathElement = document.createElementNS(SVG_NAMESPACE, 'path');\n    // const calcAngleBetweenPoints = (point: Point, origin?: Point) => {\n    //   if (!origin) return 0;\n    //   const d = {\n    //     x: point.x - origin.x,\n    //     y: point.y - origin.y\n    //   }\n    //   return Math.atan2(d.y, d.x) / (Math.PI / 180);\n    // }\n    // const path: (Point & { angles: number[] })[] = []\n    // Array.from({ length: dump }).forEach((_, step) => {\n    //   originPath.forEach((point, index, arr) => {\n    //     if (!path[index]) path[index] = { angles: [], ...point }\n    //     const originStep = step + 1\n    //     const originPoint = arr[index >= originStep ? index - originStep : arr.length + (index - originStep)]\n    //     path[index].angles.push(calcAngleBetweenPoints(point, originPoint))\n    //   })\n    // })\n    // console.log(path)\n    // 创建路径点\n    const createPath = (points) => points.reduce((result, point, index, arr) => {\n        if (index === 0)\n            return `M${point.x},${point.y}`;\n        const prePoint = arr[index - 1];\n        const nextPoint = arr[index + 1];\n        // 如果点居于中间则无需添加\n        if (prePoint && nextPoint) {\n            if (point.x === prePoint.x &&\n                point.x === nextPoint.x &&\n                ((point.y > prePoint.y && point.y < nextPoint.y) || (point.y < prePoint.y && point.y > nextPoint.y)))\n                return result;\n            if (point.y === prePoint.y &&\n                point.y === nextPoint.y &&\n                ((point.x > prePoint.x && point.x < nextPoint.x) || (point.x < prePoint.x && point.x > nextPoint.x)))\n                return result;\n        }\n        return result + ` L${point.x},${point.y}`;\n    }, '');\n    // 创建合并路径点\n    const d = [originPath, ...clipPaths].reduce((d, points, index) => {\n        const _d = createPath(points);\n        return index === 0 ? _d : `${d} ${_d}`;\n    }, '');\n    pathElement.setAttribute('d', d);\n    pathElement.setAttribute('fill', fill);\n    pathElement.setAttribute('fill-opacity', `${opacity}`);\n    pathElement.setAttribute('fill-rule', 'evenodd');\n    pathElement.setAttribute('stroke', 'red');\n    return pathElement;\n};\n\n/**\n * 获取图像某个位置像素的色彩值\n * @param imageData 图像像素数据\n * @param row 像素点所在行\n * @param col 像素点所在列\n * @returns 像素点色值(RGBA)\n */\nconst getPixelRGBA = (imageData, row, col) => {\n    const { data, width } = imageData;\n    const index = row * width * 4 + col * 4;\n    if (index < 0)\n        return;\n    return {\n        r: data[index],\n        g: data[index + 1],\n        b: data[index + 2],\n        // 这里为了保证透明度数值准确度，不转化为[0, 1]范围\n        a: data[index + 3],\n    };\n};\n\n/**\n * 遍历图像像素点\n * @param imageData 图像像素数据\n * @param handler 遍历处理方法\n */\nconst forEachImagePixel = (imageData, handler) => {\n    const { width, height } = imageData;\n    for (let row = 0; row < height; row++) {\n        for (let col = 0; col < width; col++) {\n            handler(row, col, getPixelRGBA(imageData, row, col));\n        }\n    }\n};\n\n/**\n * 两个色值是否相同\n */\nconst isSameColor = (color1, color2, options = {}) => {\n    const { r: R1, g: G1, b: B1, a: A1 } = color1;\n    const { r: R2, g: G2, b: B2, a: A2 } = color2;\n    const { float = 0.02, ignoreOpacity = false } = options;\n    const similarity = 1 - (Math.sqrt(Math.pow(R2 - R1, 2) + Math.pow(G2 - G1, 2) + Math.pow(B2 - B1, 2))) / (Math.sqrt(Math.pow(255, 2) + Math.pow(255, 2) + Math.pow(255, 2)));\n    if (!(1 - similarity < float))\n        console.log(similarity);\n    return 1 - similarity < float;\n};\n\n/**\n * 获取像素点最终所在色块区域\n * @param area 直属区域\n * @returns 最终的区域归属\n */\nconst getPixelBelongArea = (area) => {\n    let _area = area;\n    // 如果区域被融合进其他区域\n    while (_area === null || _area === void 0 ? void 0 : _area.within)\n        _area = _area.within;\n    return _area;\n};\n/**\n * 填充区域颜色\n * ① 遍历像素点\n * ② 每个像素点判断上左两个方向的像素点是否同色，如果是则“融合”区域，如果都没有则创建起始点\n * ④ 遍历完成后生成路径标签并填充区域\n */\nconst fillArea = (svg, imageData) => {\n    // 像素点数据\n    const pixelData = [];\n    // 从左到右、从上到下遍历像素\n    forEachImagePixel(imageData, (row, col, color) => {\n        var _a, _b;\n        if (!pixelData[row])\n            pixelData[row] = [];\n        // 完全透明的像素块，没有渲染成路径的必要\n        if (color.a === 0) {\n            pixelData[row].push({ color });\n            return;\n        }\n        // 上边像素点\n        const topPixel = (_a = pixelData[row - 1]) === null || _a === void 0 ? void 0 : _a[col];\n        // 左边像素点\n        const leftPixel = (_b = pixelData[row]) === null || _b === void 0 ? void 0 : _b[col - 1];\n        // 上边像素所在区域\n        const topArea = getPixelBelongArea(topPixel === null || topPixel === void 0 ? void 0 : topPixel.area);\n        // 左边像素所在区域\n        const leftArea = getPixelBelongArea(leftPixel === null || leftPixel === void 0 ? void 0 : leftPixel.area);\n        // 是否与上边区域颜色一样\n        const sameWithTop = topArea && isSameColor(topPixel.color, color);\n        // 是否与左边区域颜色一样\n        const sameWithLeft = leftArea && isSameColor(leftPixel.color, color);\n        // 根据不同情况执行不同的融合操作\n        const mergeHandles = {\n            sameNone: () => {\n                pixelData[row].push({\n                    color,\n                    area: {\n                        startPos: { row, col },\n                        outer: [\n                            { x: col, y: row },\n                            { x: col + 1, y: row },\n                            { x: col + 1, y: row + 1 },\n                            { x: col, y: row + 1 },\n                        ],\n                        inners: []\n                    }\n                });\n            },\n            sameWithTopOnly: () => {\n                if (!topArea)\n                    return;\n                const index = topArea.outer.findIndex(point => point.x === col &&\n                    point.y === row);\n                topArea.outer.splice(index, 0, { x: col + 1, y: row + 1 }, { x: col, y: row + 1 });\n                pixelData[row].push({\n                    color,\n                    area: topArea\n                });\n            },\n            sameWithLeftOnly: () => {\n                if (!leftArea)\n                    return;\n                let index = leftArea.outer.findIndex(point => point.x === col &&\n                    point.y === row);\n                leftArea.outer.splice(index + 1, 0, { x: col + 1, y: row }, { x: col + 1, y: row + 1 });\n                pixelData[row].push({\n                    color,\n                    area: leftArea\n                });\n            },\n            sameBothAndSameArea: () => {\n                if (!topArea)\n                    return;\n                const index = topArea.outer.findIndex(point => point.x === col && point.y === row);\n                topArea.outer.splice(index, 1, { x: col + 1, y: row + 1 });\n                pixelData[row].push({\n                    color,\n                    area: topArea\n                });\n            },\n            sameBothAndDiffArea: () => {\n                if (!leftArea || !topArea)\n                    return;\n                const topIndex = topArea.outer.findIndex(item => item.x === col && item.y === row);\n                const leftIndex = leftArea.outer.findIndex(item => item.x === col && item.y === row);\n                topArea.outer = topArea.outer\n                    .slice(0, topIndex)\n                    .concat([{ x: col + 1, y: row + 1 }], leftArea.outer.slice(leftIndex + 1), leftArea.outer.slice(0, leftIndex + 1), topArea.outer.slice(topIndex + 1));\n                topArea.inners = topArea.inners.concat(leftArea.inners);\n                leftArea.within = topArea;\n                pixelData[row].push({\n                    color,\n                    area: topArea\n                });\n            },\n            hollowArea: (leftIndex, rightTopIndex) => {\n                if (!leftArea)\n                    return;\n                const removePoints = leftArea.outer.splice(rightTopIndex, (leftIndex + 1) - rightTopIndex);\n                leftArea.inners.push(removePoints);\n                leftArea.outer.splice(rightTopIndex, 0, { x: col + 1, y: row }, { x: col + 1, y: row + 1 });\n                pixelData[row].push({\n                    color,\n                    area: leftArea\n                });\n            },\n            hollowAreaWithNewStart: (leftIndex, rightTopIndex) => {\n                if (!leftArea)\n                    return;\n                const newOuterPoints = leftArea.outer.splice(leftIndex + 1, rightTopIndex - (leftIndex + 1));\n                leftArea.inners.push(leftArea.outer);\n                leftArea.outer = newOuterPoints;\n                leftArea.startPos = { row, col };\n                leftArea.outer.push({ x: col + 1, y: row }, { x: col + 1, y: row + 1 });\n                pixelData[row].push({\n                    color,\n                    area: leftArea\n                });\n            },\n        };\n        if (sameWithLeft) {\n            if (sameWithTop) {\n                if (topArea === leftArea)\n                    mergeHandles.sameBothAndSameArea();\n                else\n                    mergeHandles.sameBothAndDiffArea();\n            }\n            else {\n                let index = leftArea.outer.findIndex(point => point.x === col &&\n                    point.y === row);\n                const rightTopIndex = leftArea.outer.findIndex(point => point.x === col + 1 &&\n                    point.y === row);\n                if (rightTopIndex !== -1) {\n                    if (index > rightTopIndex)\n                        mergeHandles.hollowArea(index, rightTopIndex);\n                    else\n                        mergeHandles.hollowAreaWithNewStart(index, rightTopIndex);\n                }\n                else\n                    mergeHandles.sameWithLeftOnly();\n            }\n        }\n        else if (sameWithTop)\n            mergeHandles.sameWithTopOnly();\n        else\n            mergeHandles.sameNone();\n    });\n    // 遍历色值数组\n    const { width, height } = imageData;\n    for (let row = 0; row < height; row++) {\n        for (let col = 0; col < width; col++) {\n            const pixel = pixelData[row][col];\n            const area = getPixelBelongArea(pixel.area);\n            // 没有绘制区域，跳出\n            if (!area)\n                continue;\n            const { color } = pixel;\n            const { startPos, outer, inners } = area;\n            // 不是区域绘制起始点，跳出\n            if (startPos.row !== row || startPos.col !== col)\n                continue;\n            svg.appendChild(createPathElement({\n                path: outer,\n                clipPaths: inners,\n                fill: `rgb(${color.r}, ${color.g}, ${color.b})`,\n                opacity: color.a / 255\n            }));\n        }\n    }\n};\n\n/**\n * 将图像转化为svg\n * @param image 图像节点\n * @returns\n */\nconst image2svg = (image) => {\n    const canvas = document.createElement('canvas');\n    canvas.width = image.naturalWidth;\n    canvas.height = image.naturalHeight;\n    const ctx = canvas.getContext('2d');\n    if (!ctx)\n        return;\n    // createTestImage(canvas, 5, 5, [\n    //   {\n    //     row: 0,\n    //     col: 0,\n    //     color: 'rgba(255, 0, 0, 0)'\n    //   },\n    //   {\n    //     row: 1,\n    //     col: 1,\n    //     color: 'rgba(255, 0, 0, 0)'\n    //   },\n    //   {\n    //     row: 2,\n    //     col: 2,\n    //     color: 'rgba(255, 0, 0, 0)'\n    //   },\n    //   {\n    //     row: 3,\n    //     col: 3,\n    //     color: 'rgba(255, 0, 0, 0)'\n    //   },\n    //   {\n    //     row: 0,\n    //     col: 3,\n    //     color: 'rgba(255, 0, 0, 0)'\n    //   },\n    //   {\n    //     row: 1,\n    //     col: 4,\n    //     color: 'rgba(255, 0, 0, 0)'\n    //   },\n    //   {\n    //     row: 3,\n    //     col: 0,\n    //     color: 'rgba(255, 0, 0, 0)'\n    //   },\n    //   {\n    //     row: 4,\n    //     col: 1,\n    //     color: 'rgba(255, 0, 0, 0)'\n    //   },\n    //   {\n    //     row: 4,\n    //     col: 0,\n    //     color: 'rgba(255, 0, 0, 0)'\n    //   },\n    //   {\n    //     row: 0,\n    //     col: 4,\n    //     color: 'rgba(255, 0, 0, 0)'\n    //   },\n    // ])\n    ctx.imageSmoothingEnabled = false;\n    ctx.drawImage(image, 0, 0);\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    // console.log(imageData)\n    const svg = createSvgElement({\n        width: canvas.width,\n        height: canvas.height,\n    });\n    // 方案一：填充每一个单位色块\n    // fillUnit(svg, imageData)\n    // 方案二：填充区域色块\n    fillArea(svg, imageData);\n    return { canvas, svg };\n};\n\nexport { image2svg as default };\n","import imageToSvg from 'image-to-svg';\n\nconst main = () => {\n  const sourceImage = document.querySelector('#source') as HTMLImageElement\n  const effect = document.querySelector('#effect') as HTMLDivElement\n\n  let zoom = 1\n  let offset = {\n    x: 0,\n    y: 0\n  }\n  let initPos: { x: number; y: number } | undefined;\n  let movePos: { x: number; y: number } | undefined;\n\n  const transform = (options: { zoom?: number, offset?: typeof offset } = {}) => {\n    if (options.zoom) zoom = options.zoom\n    if (options.offset) offset = options.offset\n\n    const style = `\n      transform: scale(${zoom}) translate(${offset.x}px, ${offset.y}px);\n      cursor: ${movePos ? 'grabbing' : `grab`};\n    `\n\n    effect.setAttribute('style', style)\n    sourceImage.setAttribute('style', style)\n  }\n\n  // sourceImage.onload = () => {\n  const result = imageToSvg(sourceImage)\n  if (result) {\n    const { canvas, svg } = result\n    // sourceImage.src = canvas.toDataURL()\n    effect.appendChild(svg)\n  }\n  // }\n\n  effect.onwheel = (e) => {\n    const dZoom = 0.999 ** (e.deltaY / 2);\n    transform({ zoom: zoom * dZoom })\n  }\n\n  effect.onmousedown = (e) => {\n    initPos = offset\n    movePos = { x: e.x, y: e.y }\n  }\n  effect.onmouseup = () => {\n    initPos = undefined\n    movePos = undefined\n    transform()\n  }\n  effect.onmousemove = (e) => {\n    if (movePos) {\n      transform({\n        offset: {\n          x: (initPos ?? offset).x + (e.x - movePos.x) / zoom,\n          y: (initPos ?? offset).y + (e.y - movePos.y) / zoom,\n        }\n      })\n    }\n  }\n}\n\nmain()\n"],"names":["SVG_NAMESPACE","createSvgElement","attrs","width","height","viewBox","svg","document","createElementNS","setAttribute","createPathElement","originPath","path","clipPaths","fill","opacity","pathElement","createPath","points","reduce","result","point","index","arr","x","y","prePoint","nextPoint","d","_d","getPixelRGBA","imageData","row","col","data","r","g","b","a","forEachImagePixel","handler","isSameColor","color1","color2","options","R1","G1","B1","R2","G2","B2","float","ignoreOpacity","similarity","Math","sqrt","pow","console","log","getPixelBelongArea","area","_area","within","fillArea","pixelData","color","_a","_b","push","topPixel","leftPixel","topArea","leftArea","sameWithTop","sameWithLeft","mergeHandles","sameNone","startPos","outer","inners","sameWithTopOnly","findIndex","splice","sameWithLeftOnly","sameBothAndSameArea","sameBothAndDiffArea","topIndex","item","leftIndex","slice","concat","hollowArea","rightTopIndex","removePoints","hollowAreaWithNewStart","newOuterPoints","pixel","appendChild","image2svg","image","canvas","createElement","naturalWidth","naturalHeight","ctx","getContext","imageSmoothingEnabled","drawImage","getImageData","imageToSvg"],"mappings":"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"}